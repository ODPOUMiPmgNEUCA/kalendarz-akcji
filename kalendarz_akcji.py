# -*- coding: utf-8 -*-
"""Kalendarz_akcji.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bfU5lwdNa2GOPWmQ9-URaf30VnlBzQC0
"""

#importowanie potrzebnych bibliotek
import os
import openpyxl
import streamlit as st
import pandas as pd
import numpy as np
import altair as alt
import plotly.express as px
import plotly.graph_objects as go
from urllib.request import urlopen
import json
import io
import datetime
from streamlit_calendar import calendar

st.set_page_config(page_title='Kalendarz akcji', layout='wide')

tabs_font_css = """
<style>
div[class*="stTextInput"] label {
  font-size: 26px;
  color: black;
}
div[class*="stSelectbox"] label {
  font-size: 26px;
  color: black;
}
</style>
"""
st.title("Kalendarz akcji")

# Upload pliku Excel z akcjami
uploaded_file = st.file_uploader("Wczytaj plik Excel z akcjami", type=["xlsx"])

if uploaded_file:
    # Wczytanie Excela do DataFrame
    df = pd.read_excel(uploaded_file)

    # Wy≈õwietlamy dane ≈ºeby zobaczyƒá co w pliku
    st.write("PodglƒÖd danych:")
    st.dataframe(df.head())

    # Zak≈Çadam, ≈ºe masz kolumny: "Nazwa akcji", "Data startu", "Data ko≈Ñca"
    df["Data startu"] = pd.to_datetime(df["Data startu"])
    df["Data ko≈Ñca"] = pd.to_datetime(df["Data ko≈Ñca"])

    # üé® Sta≈Ça lista kolor√≥w ‚Äì nie bƒôdzie ‚Äûskakaƒá‚Äù
    colors = ["#FF6F61", "#6B5B95", "#88B04B", "#F7CAC9", "#92A8D1",
              "#FFB347", "#E6B0AA", "#48C9B0", "#B565A7", "#009B77",
              "#DD4124", "#45B8AC", "#EFC050", "#5B5EA6", "#9B2335",
              "#DFCFBE", "#55B4B0", "#E15D44", "#7FCDCD", "#BC243C"]

    # Przypisanie kolor√≥w do unikalnych nazw akcji
    unique_names = df["Nazwa akcji"].unique()
    color_map = {name: colors[i % len(colors)] for i, name in enumerate(unique_names)}

    # Tworzymy listƒô event√≥w do kalendarza
    events = []
    for _, row in df.iterrows():
        event = {
            "start": row["Data startu"].strftime("%Y-%m-%d"),
            "end": row["Data ko≈Ñca"].strftime("%Y-%m-%d"),
            "title": row["Nazwa akcji"],
            "color": color_map[row["Nazwa akcji"]],
        }
        events.append(event)

    # Pokazujemy kalendarz miesiƒôczny z eventami
    calendar_options = {
        "initialView": "dayGridMonth"   # widok miesiƒôczny
    }

    calendar(events=events, options=calendar_options)

else:
    st.info("Proszƒô wczytaƒá plik Excel z kolumnami: Nazwa akcji, Data startu, Data ko≈Ñca.")
