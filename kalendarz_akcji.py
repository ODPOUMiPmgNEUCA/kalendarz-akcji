# -*- coding: utf-8 -*-
"""Kalendarz_akcji.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bfU5lwdNa2GOPWmQ9-URaf30VnlBzQC0
"""

# -*- coding: utf-8 -*-
"""Kalendarz_akcji.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bfU5lwdNa2GOPWmQ9-URaf30VnlBzQC0
"""

import os
import openpyxl
import streamlit as st
import pandas as pd
import numpy as np
import altair as alt
import plotly.express as px
import plotly.graph_objects as go
from urllib.request import urlopen
import json
import io
import datetime
from streamlit_calendar import calendar
import random

st.set_page_config(page_title='Kalendarz akcji', layout='wide')

st.title("üìÖ Kalendarz akcji")

# --- üîµ TWORZYMY ZAK≈ÅADKI ---
tab1, tab2 = st.tabs(["üìÜ Kalendarz", "üìä Statystyki"])

with tab1:
    # Upload pliku Excel z akcjami
    uploaded_file = st.file_uploader("Wczytaj plik Excel z akcjami", type=["xlsx"])

    if uploaded_file:
        # Wczytanie Excela do DataFrame
        df = pd.read_excel(uploaded_file)

        st.write("PodglƒÖd danych:")
        st.dataframe(df.head())

        df["Data startu"] = pd.to_datetime(df["Data startu"])
        df["Data ko≈Ñca"] = pd.to_datetime(df["Data ko≈Ñca"])

        # üé® Paleta kolor√≥w (odcienie niebieskiego)
        blue_palette = [
            "#c6dbef", "#9ecae1", "#6baed6",
            "#4292c6", "#2171b5", "#08519c",
            "#08306b", "#041f4a"
        ]

        unique_names = df["Nazwa akcji"].unique()
        color_map = {name: blue_palette[i % len(blue_palette)] for i, name in enumerate(unique_names)}

        # Przygotowanie event√≥w
        events = []
        for _, row in df.iterrows():
            event = {
                "start": row["Data startu"].strftime("%Y-%m-%d"),
                "end": row["Data ko≈Ñca"].strftime("%Y-%m-%d"),
                "title": row["Nazwa akcji"],
                "color": color_map[row["Nazwa akcji"]],
            }
            events.append(event)

        # Ustawienia kalendarza
        calendar_options = {
            "initialView": "dayGridMonth",
            "headerToolbar": {
                "left": "prev,next today",
                "center": "title",
                "right": "dayGridMonth,dayGridWeek,dayGridDay"
            },
            "height": 750,
            "contentHeight": "auto",
            "aspectRatio": 1.5,
            "navLinks": True,
            "editable": False,
            "dayMaxEventRows": True,
            "locale": "pl",
            "firstDay": 1
        }

        calendar(events=events, options=calendar_options)

    else:
        st.info("Proszƒô wczytaƒá plik Excel z kolumnami: Nazwa akcji, Data startu, Data ko≈Ñca.")

with tab2:
    st.subheader("üìä Statystyki akcji")
    st.write("Tutaj mo≈ºna dodaƒá wykresy, analizy, podsumowania ‚Äì np. ile akcji jest w danym miesiƒÖcu.")
