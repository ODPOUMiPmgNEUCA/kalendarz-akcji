# -*- coding: utf-8 -*-
"""Kalendarz_akcji.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bfU5lwdNa2GOPWmQ9-URaf30VnlBzQC0
"""

# -*- coding: utf-8 -*-
"""Kalendarz_akcji.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bfU5lwdNa2GOPWmQ9-URaf30VnlBzQC0
"""

# -*- coding: utf-8 -*-
"""Kalendarz_akcji.ipynb"""

#importowanie potrzebnych bibliotek
import os
import openpyxl
import streamlit as st
import pandas as pd
import numpy as np
import altair as alt
import plotly.express as px
import plotly.graph_objects as go
from urllib.request import urlopen
import json
import io
import datetime
from streamlit_calendar import calendar


st.set_page_config(page_title='Kalendarz akcji', layout='wide')
st.title("📆 Kalendarz akcji")

# 🎨 RÓŻNE PALETY DO WYBORU
palettes = {
    "Żywa": [
        "#FF6B6B", "#FF922B", "#FFD93D", "#6BCB77",
        "#4D96FF", "#845EC2", "#FF5E78", "#00C9A7"
    ],
    "Pastelowa": [
        "#FFB3BA", "#FFDFBA", "#FFFFBA", "#BAFFC9",
        "#BAE1FF", "#E0BBE4", "#FFCCE5", "#C2F0FC"
    ],
    "Odcienie niebieskiego": [
        "#001F3F", "#003566", "#00509E", "#0074D9",
        "#419DFF", "#7ABFFF", "#A8D8FF", "#D6ECFF"
    ]
}

# 🔽 WYBÓR PALETY
selected_palette = st.selectbox("🎨 Wybierz paletę kolorów", list(palettes.keys()))

# 📂 UPLOAD PLIKU
uploaded_file = st.file_uploader("📄 Wczytaj plik Excel z akcjami", type=["xlsx"])

if uploaded_file:
    # Wczytanie Excela
    df = pd.read_excel(uploaded_file)

    st.write("🔍 Podgląd danych:")
    st.dataframe(df.head())

    # Konwersja kolumn na datetime
    df["Data startu"] = pd.to_datetime(df["Data startu"])
    df["Data końca"] = pd.to_datetime(df["Data końca"])

    # 🎨 Mapowanie kolorów
    palette = palettes[selected_palette]
    unique_names = df["Nazwa akcji"].unique()
    color_map = {name: palette[i % len(palette)] for i, name in enumerate(unique_names)}

    # 📅 Tworzenie eventów
    events = []
    for _, row in df.iterrows():
        events.append({
            "start": row["Data startu"].strftime("%Y-%m-%d"),
            "end": row["Data końca"].strftime("%Y-%m-%d"),
            "title": row["Nazwa akcji"],
            "color": color_map[row["Nazwa akcji"]],
        })

    # ⚙️ Ustawienia kalendarza
    calendar_options = {
        "initialView": "dayGridMonth",
        "headerToolbar": {
            "left": "prev,next today",
            "center": "title",
            "right": "dayGridMonth,dayGridWeek,dayGridDay"
        },
        "height": 750,
        "contentHeight": "auto",
        "aspectRatio": 1.5,
        "navLinks": True,
        "editable": False,
        "dayMaxEventRows": True,
        "locale": "pl",
        "firstDay": 1
    }

    # 📆 Wyświetlenie kalendarza
    calendar(events=events, options=calendar_options)

else:
    st.info("📥 Proszę wczytać plik Excel z kolumnami: Nazwa akcji, Data startu, Data końca.")
