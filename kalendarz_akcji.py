# -*- coding: utf-8 -*-
"""Kalendarz_akcji.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bfU5lwdNa2GOPWmQ9-URaf30VnlBzQC0
"""

# -*- coding: utf-8 -*-
"""Kalendarz_akcji.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bfU5lwdNa2GOPWmQ9-URaf30VnlBzQC0
"""

#importowanie potrzebnych bibliotek
import os
import openpyxl
import streamlit as st
import pandas as pd
import numpy as np
import altair as alt
import plotly.express as px
import plotly.graph_objects as go
from urllib.request import urlopen
import json
import io
import datetime
from streamlit_calendar import calendar
import random

st.set_page_config(page_title='Kalendarz akcji', layout='wide')

tabs_font_css = """
<style>
div[class*="stTextInput"] label {
  font-size: 26px;
  color: black;
}
div[class*="stSelectbox"] label {
  font-size: 26px;
  color: black;
}
</style>
"""
st.title("Kalendarz akcji")

# Upload pliku Excel z akcjami
uploaded_file = st.file_uploader("Wczytaj plik Excel z akcjami", type=["xlsx"])

if uploaded_file:
    # Wczytanie Excela do DataFrame
    df = pd.read_excel(uploaded_file)

    # Wyświetlamy dane żeby zobaczyć co w pliku
    st.write("Podgląd danych:")
    st.dataframe(df.head())

    # Zakładam, że masz kolumny: "Nazwa akcji", "Data startu", "Data końca"
    # Konwersja kolumn na datetime
    df["Data startu"] = pd.to_datetime(df["Data startu"])
    df["Data końca"] = pd.to_datetime(df["Data końca"])

    # Użyjmy stałego mapowania kolorów, żeby kolory się nie zmieniały przy odświeżeniu
    # Jeśli chcesz, możesz podać własne kolory na stałe tutaj:
    predefined_colors = [
        "#e6194b", "#3cb44b", "#ffe119", "#4363d8", "#f58231",
        "#911eb4", "#46f0f0", "#f032e6", "#bcf60c", "#fabebe",
        "#008080", "#e6beff", "#9a6324", "#fffac8", "#800000",
        "#aaffc3", "#808000", "#ffd8b1", "#000075", "#808080"
    ]

    unique_names = df["Nazwa akcji"].unique()
    color_map = {}
    for i, name in enumerate(unique_names):
        color_map[name] = predefined_colors[i % len(predefined_colors)]

    # Przygotowanie listy eventów do streamlit-calendar
    events = []
    for _, row in df.iterrows():
        event = {
            "start": row["Data startu"].strftime("%Y-%m-%d"),
            "end": row["Data końca"].strftime("%Y-%m-%d"),
            "title": row["Nazwa akcji"],
            "color": color_map[row["Nazwa akcji"]],
        }
        events.append(event)

    # Ustawienia kalendarza
    calendar_options = {
        "initialView": "dayGridMonth",
        "headerToolbar": {
            "left": "prev,next today",
            "center": "title",
            "right": "dayGridMonth,dayGridWeek,dayGridDay"  # widoki bez godzin
        },
        "height": 500,
        "contentHeight": "auto",
        "aspectRatio": 1.5,
        "navLinks": True,
        "editable": False,
        "dayMaxEventRows": True
    }

    calendar(events=events, options=calendar_options)

else:
    st.info("Proszę wczytać plik Excel z kolumnami: Nazwa akcji, Data startu, Data końca.")
